#include "bigint.h"

#include <sstream>
#include <string>
#include <vector>

#include "gtest/gtest.h"

TEST(IOTest, PositiveValue) {
  BigInt val("5555555555555555555555555555555555555555555555555555555555555");
  BigInt val2("+66666666666666666666666666666666666666666666666666666666666666666");
  BigInt val3(100);
  BigInt val4(val);
  BigInt val5 = val2;

  std::stringstream ss;
  ss << val;
  std::string val_str = ss.str();
  ASSERT_EQ(std::string("5555555555555555555555555555555555555555555555555555555555555"), val_str);

  std::stringstream ss2;
  ss2 << val2;
  std::string val_str2 = ss2.str();
  ASSERT_EQ(std::string("66666666666666666666666666666666666666666666666666666666666666666"), val_str2);

  std::stringstream ss3;
  ss3 << val3;
  std::string val_str3 = ss3.str();
  ASSERT_EQ(std::string("100"), val_str3);

  std::stringstream ss4;
  ss4 << val4;
  std::string val_str4 = ss4.str();
  ASSERT_EQ(std::string("5555555555555555555555555555555555555555555555555555555555555"), val_str4);

  std::stringstream ss5;
  ss5 << val5;
  std::string val_str5 = ss5.str();
  ASSERT_EQ(std::string("66666666666666666666666666666666666666666666666666666666666666666"), val_str5);
}

TEST(IOTest, NegativeValue) {
  BigInt val("-5555555555555555555555555555555555555555555555555555555555555");
  BigInt val2("-66666666666666666666666666666666666666666666666666666666666666666");
  BigInt val3(-100);
  BigInt val4(val);
  BigInt val5 = val2;

  std::stringstream ss;
  ss << val;
  std::string val_str = ss.str();
  ASSERT_EQ(std::string("-5555555555555555555555555555555555555555555555555555555555555"), val_str);

  std::stringstream ss2;
  ss2 << val2;
  std::string val_str2 = ss2.str();
  ASSERT_EQ(std::string("-66666666666666666666666666666666666666666666666666666666666666666"), val_str2);

  std::stringstream ss3;
  ss3 << val3;
  std::string val_str3 = ss3.str();
  ASSERT_EQ(std::string("-100"), val_str3);

  std::stringstream ss4;
  ss4 << val4;
  std::string val_str4 = ss4.str();
  ASSERT_EQ(std::string("-5555555555555555555555555555555555555555555555555555555555555"), val_str4);

  std::stringstream ss5;
  ss5 << val5;
  std::string val_str5 = ss5.str();
  ASSERT_EQ(std::string("-66666666666666666666666666666666666666666666666666666666666666666"), val_str5);
}

TEST(IOTest, InvalidValue) {
  ASSERT_THROW(BigInt val("++34243242432"), BigException);
  ASSERT_THROW(BigInt val("safsdafafsadfdsa"), BigException);
}

TEST(IOTest, InputOutputStream) {
  std::string string_values = "0 -23784829749214987164387198329324912649873123219810002104210348712743398214 +874321988888888994821392164192837932149214398214983214912439140";
  std::istringstream iss(string_values);
  std::vector<std::string> bigint_strs;

  BigInt bigint;
  while(!iss.eof()) {
    iss >> bigint;
    std::stringstream ss;
    ss << bigint;
    bigint_strs.push_back(ss.str());
  }

  ASSERT_EQ(std::string("0"), bigint_strs[0]);
  ASSERT_EQ(std::string("-23784829749214987164387198329324912649873123219810002104210348712743398214"), bigint_strs[1]);
  ASSERT_EQ(std::string("874321988888888994821392164192837932149214398214983214912439140"), bigint_strs[2]);
}

TEST(EqualOpTest, Basic) {
  BigInt val1("100");
  BigInt val1_(100);
  ASSERT_TRUE(val1 == val1_);

  BigInt val2("-200");
  BigInt val2_(-200);
  ASSERT_TRUE(val2 == val2_);

  BigInt val3("23234312487932749827498274981274389172491832749321747327123987492174213479");
  BigInt val3_("23234312487932749827498274981274389172491832749321747327123987492174213479");
  ASSERT_TRUE(val3 == val3_);

  BigInt val4("-23234312487932749827498274981274389172491832749321747327123987492174213479");
  BigInt val4_("-23234312487932749827498274981274389172491832749321747327123987492174213479");
  ASSERT_TRUE(val4 == val4_);

  BigInt val5("-23234312487932749827498274981274389172491832749321747327123987492174213479");
  BigInt val5_("-33234312487932749827498274981274389172491832749321747327123987492174213479");
  ASSERT_FALSE(val5 == val5_);

  BigInt val6("23234312487932749827498274981274389172491832749321747327123987492174213479");
  BigInt val6_("-23234312487932749827498274981274389172491832749321747327123987492174213479");
  ASSERT_FALSE(val6 == val6_);
}

TEST(NotEqualOpTest, Basic) {
  BigInt val1("100");
  BigInt val1_(100);
  ASSERT_FALSE(val1 != val1_);

  BigInt val2("-200");
  BigInt val2_(-200);
  ASSERT_FALSE(val2 != val2_);

  BigInt val3("23234312487932749827498274981274389172491832749321747327123987492174213479");
  BigInt val3_("23234312487932749827498274981274389172491832749321747327123987492174213479");
  ASSERT_FALSE(val3 != val3_);

  BigInt val4("-23234312487932749827498274981274389172491832749321747327123987492174213479");
  BigInt val4_("-23234312487932749827498274981274389172491832749321747327123987492174213479");
  ASSERT_FALSE(val4 != val4_);

  BigInt val5("-23234312487932749827498274981274389172491832749321747327123987492174213479");
  BigInt val5_("-33234312487932749827498274981274389172491832749321747327123987492174213479");
  ASSERT_TRUE(val5 != val5_);

  BigInt val6("23234312487932749827498274981274389172491832749321747327123987492174213479");
  BigInt val6_("-23234312487932749827498274981274389172491832749321747327123987492174213479");
  ASSERT_TRUE(val6 != val6_);
}

TEST(AddTest, SameSign) {
  BigInt val1("111111111111111111111111111111111111111111111111111111111111111111111");
  BigInt val1_("222222222222222222222222222222222222222222222222222222222222222222222");
  BigInt sum1_expected("333333333333333333333333333333333333333333333333333333333333333333333");
  BigInt sum1 = val1 + val1_;
  ASSERT_EQ(sum1_expected, sum1);

  BigInt val2("32347827498274983274983274983274983274983274983274983274983274983274983274983274983274983274983274982749832798432798274");
  BigInt val2_("75983247937982749827498327493274983274983274983274983274983274983274983274932749832749327493274932749832749832749832");
  BigInt sum2_expected("32423810746212966024810773310768258258258258258258258258258258258258258258258207733107732602476549915499665548265548106");
  BigInt sum2 = val2 + val2_;
  ASSERT_EQ(sum2_expected, sum2);

  BigInt val3("-3247982798749827498324759834375983475984379879879873498273274192749832174983274983217498321749832174938743298749829873214732498327492173");
  BigInt val3_("-7498774327983759834275984327983749875984375984327598237592437598437598473985987459872439759847598432759847359842375984375927597432958473597");
  BigInt sum3_expected("-7502022310782509661774309087818125859460360364207478111090710872630348306160970734855657258169348264934786103141125814249142329931285965770");
  BigInt sum3 = val3 + val3_;
  ASSERT_EQ(sum3_expected, sum3);

  BigInt val4("0");
  BigInt val4_("-34829827598432759483275984327385974359874375984325984325984327598237459874329854398574329875984327598432753298759843757");
  BigInt sum4_expected("-34829827598432759483275984327385974359874375984325984325984327598237459874329854398574329875984327598432753298759843757");
  BigInt sum4 = val4 + val4_;
  ASSERT_EQ(sum4_expected, sum4);
}

TEST(AddTest, DiffSign) {
  BigInt val1("-111111111111111111111111111111111111111111111111111111111111111111111");
  BigInt val1_("+222222222222222222222222222222222222222222222222222222222222222222222");
  BigInt sum1_expected("111111111111111111111111111111111111111111111111111111111111111111111");
  BigInt sum1 = val1 + val1_;
  ASSERT_EQ(sum1_expected, sum1);

  BigInt val2("-32347827498274983274983274983274983274983274983274983274983274983274983274983274983274983274983274982749832798432798274");
  BigInt val2_("75983247937982749827498327493274983274983274983274983274983274983274983274932749832749327493274932749832749832749832");
  BigInt sum2_expected("-32271844250337000525155776655781708291708291708291708291708291708291708291708342233442233947490000050000000048600048442");
  BigInt sum2 = val2 + val2_;
  ASSERT_EQ(sum2_expected, sum2);

  BigInt val3("-3247982798749827498324759834375983475984379879879873498273274192749832174983274983217498321749832174938743298749829873214732498327492173");
  BigInt val3_("+7498774327983759834275984327983749875984375984327598237592437598437598473985987459872439759847598432759847359842375984375927597432958473597");
  BigInt sum3_expected("7495526345185010006777659568149373892508391604447718364094164324244848641811004184889222261525848600584908616543626154502712864934630981424");
  BigInt sum3 = val3 + val3_;
  ASSERT_EQ(sum3_expected, sum3);

  BigInt val4("-3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
  BigInt val4_("+3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
  BigInt sum4_expected("0");
  BigInt sum4 = val4 + val4_;
  ASSERT_EQ(sum4_expected, sum4);
}

TEST(AddTest, AddAndAssign) {
  BigInt val1("111111111111111111111111111111111111111111111111111111111111111111111");
  BigInt val1_("222222222222222222222222222222222222222222222222222222222222222222222");
  BigInt sum1_expected("333333333333333333333333333333333333333333333333333333333333333333333");
  val1 += val1_;
  ASSERT_EQ(sum1_expected, val1);

  BigInt val2("32347827498274983274983274983274983274983274983274983274983274983274983274983274983274983274983274982749832798432798274");
  BigInt val2_("75983247937982749827498327493274983274983274983274983274983274983274983274932749832749327493274932749832749832749832");
  BigInt sum2_expected("32423810746212966024810773310768258258258258258258258258258258258258258258258207733107732602476549915499665548265548106");
  val2 += val2_;
  ASSERT_EQ(sum2_expected, val2);

  BigInt val3("-3247982798749827498324759834375983475984379879879873498273274192749832174983274983217498321749832174938743298749829873214732498327492173");
  BigInt val3_("+7498774327983759834275984327983749875984375984327598237592437598437598473985987459872439759847598432759847359842375984375927597432958473597");
  BigInt sum3_expected("7495526345185010006777659568149373892508391604447718364094164324244848641811004184889222261525848600584908616543626154502712864934630981424");
  val3 += val3_;
  ASSERT_EQ(sum3_expected, val3);
}

TEST(SubstractTest, SameSign) {
  BigInt val1("111111111111111111111111111111111111111111111111111111111111111111111");
  BigInt val1_("222222222222222222222222222222222222222222222222222222222222222222222");
  BigInt diff1_expected("-111111111111111111111111111111111111111111111111111111111111111111111");
  BigInt diff1 = val1 - val1_;
  ASSERT_EQ(diff1_expected, diff1);

  BigInt val2("32347827498274983274983274983274983274983274983274983274983274983274983274983274983274983274983274982749832798432798274");
  BigInt val2_("75983247937982749827498327493274983274983274983274983274983274983274983274932749832749327493274932749832749832749832");
  BigInt diff2_expected("32271844250337000525155776655781708291708291708291708291708291708291708291708342233442233947490000050000000048600048442");
  BigInt diff2 = val2 - val2_;
  ASSERT_EQ(diff2_expected, diff2);

  BigInt val3("-3247982798749827498324759834375983475984379879879873498273274192749832174983274983217498321749832174938743298749829873214732498327492173");
  BigInt val3_("-7498774327983759834275984327983749875984375984327598237592437598437598473985987459872439759847598432759847359842375984375927597432958473597");
  BigInt diff3_expected("7495526345185010006777659568149373892508391604447718364094164324244848641811004184889222261525848600584908616543626154502712864934630981424");
  BigInt diff3 = val3 - val3_;
  ASSERT_EQ(diff3_expected, diff3);
}

TEST(SubstractTest, DiffSign) {
  BigInt val1("111111111111111111111111111111111111111111111111111111111111111111111");
  BigInt val1_("-222222222222222222222222222222222222222222222222222222222222222222222");
  BigInt diff1_expected("333333333333333333333333333333333333333333333333333333333333333333333");
  BigInt diff1 = val1 - val1_;
  ASSERT_EQ(diff1_expected, diff1);

  BigInt val2("-32347827498274983274983274983274983274983274983274983274983274983274983274983274983274983274983274982749832798432798274");
  BigInt val2_("+75983247937982749827498327493274983274983274983274983274983274983274983274932749832749327493274932749832749832749832");
  BigInt diff2_expected("-32423810746212966024810773310768258258258258258258258258258258258258258258258207733107732602476549915499665548265548106");
  BigInt diff2 = val2 - val2_;
  ASSERT_EQ(diff2_expected, diff2);

  BigInt val3("-3247982798749827498324759834375983475984379879879873498273274192749832174983274983217498321749832174938743298749829873214732498327492173");
  BigInt val3_("+7498774327983759834275984327983749875984375984327598237592437598437598473985987459872439759847598432759847359842375984375927597432958473597");
  BigInt diff3_expected("-7502022310782509661774309087818125859460360364207478111090710872630348306160970734855657258169348264934786103141125814249142329931285965770");
  BigInt diff3 = val3 - val3_;
  ASSERT_EQ(diff3_expected, diff3);
}

TEST(SubstractTest, SubAndAssign) {
  BigInt val1("111111111111111111111111111111111111111111111111111111111111111111111");
  BigInt val1_("222222222222222222222222222222222222222222222222222222222222222222222");
  BigInt diff1_expected("-111111111111111111111111111111111111111111111111111111111111111111111");
  val1 -= val1_;
  ASSERT_EQ(diff1_expected, val1);

  BigInt val2("-3247982798749827498324759834375983475984379879879873498273274192749832174983274983217498321749832174938743298749829873214732498327492173");
  BigInt val2_("-7498774327983759834275984327983749875984375984327598237592437598437598473985987459872439759847598432759847359842375984375927597432958473597");
  BigInt diff2_expected("7495526345185010006777659568149373892508391604447718364094164324244848641811004184889222261525848600584908616543626154502712864934630981424");
  val2 -= val2_;
  ASSERT_EQ(diff2_expected, val2);

  BigInt val3("-3247982798749827498324759834375983475984379879879873498273274192749832174983274983217498321749832174938743298749829873214732498327492173");
  BigInt val3_("+7498774327983759834275984327983749875984375984327598237592437598437598473985987459872439759847598432759847359842375984375927597432958473597");
  BigInt diff3_expected("-7502022310782509661774309087818125859460360364207478111090710872630348306160970734855657258169348264934786103141125814249142329931285965770");
  val3 -= val3_;
  ASSERT_EQ(diff3_expected, val3);
}

TEST(AssignOpTest, Basic) {
  BigInt val1("23742983749847239174983217498321749832174398274983217498327498321749832749832749832749832749174982174092174798749874982165987474109410798321");
  BigInt val1_ = val1;
  ASSERT_EQ(val1, val1_);

  BigInt val2("-832174398274983217498327498321749832749832749832749832749174982174092174798749874982165987474109410798321");
  BigInt val2_ = val2;
  ASSERT_EQ(val2, val2_);

  BigInt val3("+4983217498321749832174398274983217498327498321749832749832749832749832749174982174092174798749874982165987474109410798321");
  BigInt val3_ = val3;
  ASSERT_EQ(val3, val3_);
}

TEST(MultiplyTest, Zero) {
  BigInt val1("0");
  BigInt val1_(0);
  BigInt prod1_expected(0);
  BigInt prod1 = val1 * val1_;
  ASSERT_EQ(prod1_expected, prod1);

  BigInt val2("344242353245432543254325432532454354325432543254325432532524354325379832749273947498327492837498327439827");
  BigInt val2_(0);
  BigInt prod2_expected(0);
  BigInt prod2 = val2 * val2_;
  ASSERT_EQ(prod2_expected, prod2);
}

TEST(MultiplyTest, SameSign) {
  BigInt val1(1);
  BigInt val1_("3459874327598594359432759832598235987439857432759843298432598432759843275984375987432598432759874398598432543298759874398433475432");
  BigInt prod1_expected("3459874327598594359432759832598235987439857432759843298432598432759843275984375987432598432759874398598432543298759874398433475432");
  BigInt prod1 = val1 * val1_;
  ASSERT_EQ(prod1_expected, prod1);

  BigInt val2("344242353245432543254325432532454354325432543254325432532524354325379832749273947498327492837498327439827");
  BigInt val2_("98724384259843759843729857432987598432759432759843275984375984327598743298579843275984327598432759843275984325");
  BigInt prod2_expected("33985114360314956011083226908599084971129671009374248814641592858517814678002345624374381403387534572616846404579279955974997345407871814587339592160252836363144467497168632954562299294638152880867435054270632711775");
  BigInt prod2 = val2 * val2_;
  ASSERT_EQ(prod2_expected, prod2);

  BigInt val3("-483984375897937498274983274983274983274982374983274987329842739843279843274983274983274983274987432974329847329874983274983274");
  BigInt val3_("-9988768237786487326487632874624876328746287646324872634873264873264873264");
  BigInt prod3_expected("4834407761554234014442149633285233040748035404410884966912502516124206858866447995383035998576791626955498090367509579088129055427020919334253723293041832110504360269607407780714780378724431329786336");
  BigInt prod3 = val3 * val3_;
  ASSERT_EQ(prod3_expected, prod3);
}

TEST(MultiplyTest, DiffSign) {
  BigInt val1(-1);
  BigInt val1_("3459874327598594359432759832598235987439857432759843298432598432759843275984375987432598432759874398598432543298759874398433475432");
  BigInt prod1_expected("-3459874327598594359432759832598235987439857432759843298432598432759843275984375987432598432759874398598432543298759874398433475432");
  BigInt prod1 = val1 * val1_;
  ASSERT_EQ(prod1_expected, prod1);

  BigInt val2("+344242353245432543254325432532454354325432543254325432532524354325379832749273947498327492837498327439827");
  BigInt val2_("-98724384259843759843729857432987598432759432759843275984375984327598743298579843275984327598432759843275984325");
  BigInt prod2_expected("-33985114360314956011083226908599084971129671009374248814641592858517814678002345624374381403387534572616846404579279955974997345407871814587339592160252836363144467497168632954562299294638152880867435054270632711775");
  BigInt prod2 = val2 * val2_;
  ASSERT_EQ(prod2_expected, prod2);

  BigInt val3("-483984375897937498274983274983274983274982374983274987329842739843279843274983274983274983274987432974329847329874983274983274");
  BigInt val3_("+9988768237786487326487632874624876328746287646324872634873264873264873264");
  BigInt prod3_expected("-4834407761554234014442149633285233040748035404410884966912502516124206858866447995383035998576791626955498090367509579088129055427020919334253723293041832110504360269607407780714780378724431329786336");
  BigInt prod3 = val3 * val3_;
  ASSERT_EQ(prod3_expected, prod3);
}

TEST(MultiplyTest, MultiplyAndAssign) {
  BigInt val1(1);
  BigInt val1_("3459874327598594359432759832598235987439857432759843298432598432759843275984375987432598432759874398598432543298759874398433475432");
  BigInt prod1_expected("3459874327598594359432759832598235987439857432759843298432598432759843275984375987432598432759874398598432543298759874398433475432");
  val1 *= val1_;
  ASSERT_EQ(prod1_expected, val1);
  
  BigInt val2("+344242353245432543254325432532454354325432543254325432532524354325379832749273947498327492837498327439827");
  BigInt val2_("-98724384259843759843729857432987598432759432759843275984375984327598743298579843275984327598432759843275984325");
  BigInt prod2_expected("-33985114360314956011083226908599084971129671009374248814641592858517814678002345624374381403387534572616846404579279955974997345407871814587339592160252836363144467497168632954562299294638152880867435054270632711775");
  val2 *= val2_;
  ASSERT_EQ(prod2_expected, val2);

  BigInt val3("-483984375897937498274983274983274983274982374983274987329842739843279843274983274983274983274987432974329847329874983274983274");
  BigInt val3_("-9988768237786487326487632874624876328746287646324872634873264873264873264");
  BigInt prod3_expected("4834407761554234014442149633285233040748035404410884966912502516124206858866447995383035998576791626955498090367509579088129055427020919334253723293041832110504360269607407780714780378724431329786336");
  val3 *= val3_;
  ASSERT_EQ(prod3_expected, val3);
}

TEST(LessThanOpTest, Basic) {
  BigInt val1("324324141243214123412343124234124413253593589867984390045075984327593280189432179821734912");
  BigInt val1_("9439842352347598325843598751401014739821641984130104101001043016487126487213482187482313987492743");
  ASSERT_LT(val1, val1_);

  BigInt val2("-1");
  BigInt val2_("0");
  ASSERT_LT(val2, val2_);

  BigInt val3("0");
  BigInt val3_("3217487213438721487213487326478");
  ASSERT_LT(val3, val3_);

  BigInt val4("-4382709999999937498279857432857209375093250984237927");
  BigInt val4_("3217487213438721487213487326478");
  ASSERT_LT(val4, val4_);

  BigInt val5("-4382709999999937498279857432857209375093250984237927");
  BigInt val5_("-3217487213438721487213487326478342233224889898853842");
  ASSERT_LT(val5, val5_);
}

TEST(LessThanOrEqualOpTest, Basic) {
  BigInt val1(0);
  BigInt val1_("0");
  ASSERT_LE(val1, val1_);

  BigInt val2("843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  BigInt val2_("+843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  ASSERT_LE(val2, val2_);

  BigInt val3("-843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  BigInt val3_("-843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  ASSERT_LE(val3, val3_);

  BigInt val4("-843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504326");
  BigInt val4_("-843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  ASSERT_LE(val4, val4_);

  BigInt val5("-8732645643287658726489632187462187648321643248764871236486324981498712941681236487216438284328764981649816487128632146873216487216487218");
  BigInt val5_("+89324984398247509298190412984821974921349214789283849217491324879321");
  ASSERT_LE(val5, val5_);
}

TEST(GreaterThanOpTest, Basic) {
  BigInt val1("324324141243214123412343124234124413253593589867984390045075984327593280189432179821734912");
  BigInt val1_("9439842352347598325843598751401014739821641984130104101001043016487126487213482187482313987492743");
  ASSERT_GT(val1_, val1);

  BigInt val2("-1");
  BigInt val2_("0");
  ASSERT_GT(val2_, val2);

  BigInt val3("0");
  BigInt val3_("3217487213438721487213487326478");
  ASSERT_GT(val3_, val3);

  BigInt val4("-4382709999999937498279857432857209375093250984237927");
  BigInt val4_("3217487213438721487213487326478");
  ASSERT_GT(val4_, val4);

  BigInt val5("-4382709999999937498279857432857209375093250984237927");
  BigInt val5_("-3217487213438721487213487326478342233224889898853842");
  ASSERT_GT(val5_, val5);
}

TEST(GreaterThanOrEqualOpTest, Basic) {
  BigInt val1(0);
  BigInt val1_("0");
  ASSERT_GE(val1_, val1);

  BigInt val2("843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  BigInt val2_("+843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  ASSERT_GE(val2_, val2);

  BigInt val3("-843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  BigInt val3_("-843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  ASSERT_GE(val3_, val3);

  BigInt val4("-843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504326");
  BigInt val4_("-843259432759432795874395798437598432759432594325093245010014370532957432975326116587435328543298504325");
  ASSERT_GE(val4_, val4);

  BigInt val5("-8732645643287658726489632187462187648321643248764871236486324981498712941681236487216438284328764981649816487128632146873216487216487218");
  BigInt val5_("+89324984398247509298190412984821974921349214789283849217491324879321");
  ASSERT_GE(val5_, val5);
}

TEST(PlusPlusTest, PreOp) {
  BigInt val1("99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");
  ASSERT_EQ(BigInt("100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"), ++val1);

  BigInt val2(0);
  ASSERT_EQ(BigInt(1), ++val2);

  BigInt val3(-1);
  ASSERT_EQ(BigInt(0), ++val3);

  BigInt val4("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648210");
  ASSERT_EQ(BigInt("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648209"), ++val4);
}

TEST(PlusPlusTest, PostOp) {
  BigInt val1("99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");
  ASSERT_EQ(BigInt("99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"), val1++);
  ASSERT_EQ(BigInt("100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"), val1);

  BigInt val2(0);
  ASSERT_EQ(BigInt(0), val2++);
  ASSERT_EQ(BigInt(1), val2);

  BigInt val3(-1);
  ASSERT_EQ(BigInt(-1), val3++);
  ASSERT_EQ(BigInt(0), val3);

  BigInt val4("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648210");
  ASSERT_EQ(BigInt("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648210"), val4++);
  ASSERT_EQ(BigInt("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648209"), val4);
}

TEST(MinusMinusTest, PreOp) {
  BigInt val1("100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
  ASSERT_EQ(BigInt("99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"), --val1);

  BigInt val2(1);
  ASSERT_EQ(BigInt(0), --val2);

  BigInt val3(0);
  ASSERT_EQ(BigInt(-1), --val3);

  BigInt val4("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648210");
  ASSERT_EQ(BigInt("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648211"), --val4);
}

TEST(MinusMinusTest, PostOp) {
  BigInt val1("99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999");
  ASSERT_EQ(BigInt("99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999"), val1--);
  ASSERT_EQ(BigInt("99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998"), val1);

  BigInt val2(0);
  ASSERT_EQ(BigInt(0), val2--);
  ASSERT_EQ(BigInt(-1), val2);

  BigInt val3(1);
  ASSERT_EQ(BigInt(1), val3--);
  ASSERT_EQ(BigInt(0), val3);

  BigInt val4("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648210");
  ASSERT_EQ(BigInt("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648210"), val4--);
  ASSERT_EQ(BigInt("-4398798274921749217483274983217498321749832175983217498321749832148732164821648732164873216487321648732164873216487321648732164873216487321648211"), val4);
}

int main(int argc, char **argv)
{
  ::testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}
